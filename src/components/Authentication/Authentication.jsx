import React, { useEffect, useState } from "react";
import { getAuth, signInWithPopup, signOut } from "firebase/auth";
import { app, googleAuthProvider } from "../../firebase";
import Home from "../Home/Home";
import {
  Box,
  Button,
  CircularProgress,
  Typography,
  Container,
  useMediaQuery,
  useTheme,
} from "@mui/material";
import GoogleIcon from "@mui/icons-material/Google";
import PageLayout from "../PageLayout/PageLayout";

const Authentication = () => {
  const auth = getAuth(app);
  const [user, setUser] = useState(null);
  const [loading, setLoading] = useState(true);
  const [inAppBrowser, setInAppBrowser] = useState(false);

  const theme = useTheme();
  const isMobile = useMediaQuery(theme.breakpoints.down("sm"));

  useEffect(() => {
    const unsub = auth.onAuthStateChanged((maybeUser) => {
      setUser(maybeUser);
      setLoading(false);
    });

    if (isInAppBrowser()) {
      setInAppBrowser(true);
    }

    return () => unsub();
  }, [auth]);

  const handleSignIn = async () => {
    try {
      setLoading(true);
      const result = await signInWithPopup(auth, googleAuthProvider);
      setUser(result.user);
    } catch (error) {
      console.error("–û—à–∏–±–∫–∞ –≤—Ö–æ–¥–∞:", error);
    } finally {
      setLoading(false);
    }
  };

  const handleSignOut = async () => {
    try {
      await signOut(auth);
      setUser(null);
    } catch (error) {
      console.error("–û—à–∏–±–∫–∞ –≤—ã—Ö–æ–¥–∞:", error);
    }
  };

  const handleOpenInBrowser = () => {
    window.open(window.location.href, "_blank");
  };

  if (loading) {
    return (
      <PageLayout>
        <Box
          sx={{
            display: "flex",
            justifyContent: "center",
            alignItems: "center",
            height: "100vh",
          }}
        >
          <CircularProgress />
        </Box>
      </PageLayout>
    );
  }

  return (
    <Box sx={{ minHeight: "100vh" }}>
      {user ? (
        <Home user={user} handleSignOut={handleSignOut} />
      ) : (
        <PageLayout>
          <Container maxWidth="sm">
            {/* üö´ –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ –æ WebView */}
            {inAppBrowser && (
              <Box
                sx={{
                  backgroundColor: "#fff3cd",
                  border: "1px solid #ffeeba",
                  borderRadius: 2,
                  p: 2,
                  mb: 3,
                  textAlign: "center",
                }}
              >
                <Typography
                  variant="body1"
                  color="text.primary"
                  fontWeight="bold"
                  gutterBottom
                >
                  ‚ö†Ô∏è –ó–¥–∞—î—Ç—å—Å—è, –≤–∏ –≤—ñ–¥–∫—Ä–∏–ª–∏ —Å–∞–π—Ç —É –≤–±—É–¥–æ–≤–∞–Ω–æ–º—É –±—Ä–∞—É–∑–µ—Ä—ñ
                  (Instagram, LinkedIn —Ç–æ—â–æ).
                </Typography>
                <Typography variant="body2" color="text.secondary" mb={1}>
                  –í—Ö—ñ–¥ —á–µ—Ä–µ–∑ Google –º–æ–∂–µ –Ω–µ –ø—Ä–∞—Ü—é–≤–∞—Ç–∏. –ë—É–¥—å –ª–∞—Å–∫–∞, –≤—ñ–¥–∫—Ä–∏–π—Ç–µ
                  —Å–∞–π—Ç —É –∑–≤–∏—á–∞–π–Ω–æ–º—É –±—Ä–∞—É–∑–µ—Ä—ñ.
                </Typography>
              </Box>
            )}

            {/* üëã –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ –∏ –∫–Ω–æ–ø–∫–∞ –≤—Ö–æ–¥–∞ */}
            <Box sx={{ textAlign: "center", py: 4 }}>
              <Typography variant="h4" gutterBottom>
                –í—ñ—Ç–∞—î–º–æ —É –¥–æ–¥–∞—Ç–∫—É AimKeep
              </Typography>
              <Typography variant="body1" color="text.secondary" mb={3}>
                –£ –Ω—å–æ–º—É —Ç–∏ –º–æ–∂–µ—à –∑–∞–ø–ª–∞–Ω—É–≤–∞—Ç–∏ —Å–≤–æ—ó —Ü—ñ–ª—ñ –Ω–∞ —Ä—ñ–∫.
              </Typography>
              <Typography variant="body1" color="text.secondary" mb={3}>
                –£–≤—ñ–π–¥–∏ –∑–∞ –¥–æ–ø–æ–º–æ–≥–æ—é —Å–≤–æ–≥–æ –∞–∫–∞—É–Ω—Ç—É Google, —â–æ–± –ø–æ—á–∞—Ç–∏!
              </Typography>
              <Button
                variant="contained"
                color="primary"
                onClick={handleSignIn}
                startIcon={<GoogleIcon />}
                sx={{
                  textTransform: "none",
                  fontWeight: "bold",
                  padding: "12px 24px",
                  fontSize: "1rem",
                }}
              >
                –£–≤—ñ–π—Ç–∏ —á–µ—Ä–µ–∑ Google
              </Button>
            </Box>
          </Container>
        </PageLayout>
      )}
    </Box>
  );
};

// üîç –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è WebView
function isInAppBrowser() {
  const ua = navigator.userAgent || navigator.vendor || window.opera;
  return /FBAN|FBAV|Instagram|LinkedIn|Twitter|Snapchat|Line/i.test(ua);
}

export default Authentication;
